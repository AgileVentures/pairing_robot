c
e.class
c
robot_math.triple
robot_math.public_methods
robot_math
c
e
c
exit
c
e.message
e.class
e
exit
"def #{$1}(arg_string); 'robot method' ; end"
arg_string
exit
c
arg_string
c
num_args
num_arg
(0..num_args)
(0..num_args).map {|i| "arg#{i}"}.join(',') 
exit
c
e.backtrace.first
e.backtrace
e.cause
e.exception
e.public_methods - Object.public_methods
$1
/wrong number of arguments \(given (.*), expected 0\)/ =~ e.message
/wrong number of arguments (given (.*), expected 0)/ =~ e.message
e.message
c
e.class
c
exit
c
n
c
e.class
c
e.class
c
e.class
c
e.class
c
klass
n
c
e.class
c
e.class
